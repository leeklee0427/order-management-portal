-- Drop existing tables if they exist
DROP TABLE IF EXISTS INCLUDES;
DROP TABLE IF EXISTS ORDER_INFO;
DROP TABLE IF EXISTS ORDER_STATUS_INFO;
DROP TABLE IF EXISTS PRODUCT_INFO;
DROP TABLE IF EXISTS PRODUCT_CATEGORY_INFO;
DROP TABLE IF EXISTS CATEGORY;
DROP TABLE IF EXISTS EMPLOYEE_TITLE_INFO;
DROP TABLE IF EXISTS EMPLOYEE_INFO;
DROP TABLE IF EXISTS CUSTOMER;

-- Create CUSTOMER table
CREATE TABLE CUSTOMER (
    USER_ID INT NOT NULL AUTO_INCREMENT,
    EMAIL_ADDRESS VARCHAR(50),
    USERNAME VARCHAR(50),
    ADDRESS VARCHAR(90),
    ZIP_CODE VARCHAR(10),
    PRIMARY KEY (USER_ID)
);

-- Create EMPLOYEE_INFO table
CREATE TABLE EMPLOYEE_INFO (
    EMPLOYEE_ID INT NOT NULL AUTO_INCREMENT,
    EMPLOYEE_NAME VARCHAR(50),
    HOME_ADDRESS VARCHAR(50),
    PRIMARY KEY (EMPLOYEE_ID)
);

-- Create EMPLOYEE_TITLE_INFO table
CREATE TABLE EMPLOYEE_TITLE_INFO (
    EMPLOYEE_NAME VARCHAR(50) NOT NULL,
    HOME_ADDRESS VARCHAR(100) NOT NULL,
    JOB_TITLE VARCHAR(90),
    PRIMARY KEY (EMPLOYEE_NAME, HOME_ADDRESS)
);

-- Create CATEGORY table
CREATE TABLE CATEGORY (
    CATEGORY_NAME VARCHAR(50) NOT NULL,
    MGR_EMPLOYEE_ID INT,
    PRIMARY KEY (CATEGORY_NAME),
    FOREIGN KEY (MGR_EMPLOYEE_ID) REFERENCES EMPLOYEE_INFO(EMPLOYEE_ID)
        ON DELETE SET NULL ON UPDATE CASCADE
);

-- Create PRODUCT_CATEGORY_INFO table
CREATE TABLE PRODUCT_CATEGORY_INFO (
    PRODUCT_NAME VARCHAR(90) NOT NULL,
    PRODUCT_CATEGORY_NAME VARCHAR(50),
    PRIMARY KEY (PRODUCT_NAME),
    FOREIGN KEY (PRODUCT_CATEGORY_NAME) REFERENCES CATEGORY(CATEGORY_NAME) 
        ON DELETE SET NULL ON UPDATE CASCADE
);

-- Create PRODUCT_INFO table
CREATE TABLE PRODUCT_INFO (
    PRODUCT_ID INT NOT NULL AUTO_INCREMENT,
    PRODUCT_NAME VARCHAR(90),
    SUPPLY INT,
    PRICE DECIMAL(5,2),
    PRIMARY KEY (PRODUCT_ID),
    FOREIGN KEY (PRODUCT_NAME) REFERENCES PRODUCT_CATEGORY_INFO(PRODUCT_NAME)
        ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create ORDER_STATUS_INFO table
CREATE TABLE ORDER_STATUS_INFO (
    ORDER_TIME DATETIME NOT NULL,
    DELIVERY_ZIP_CODE VARCHAR(10) NOT NULL,
    DELIVERY_ADDRESS VARCHAR(100) NOT NULL,
    ORDER_STATUS INT NOT NULL,
    TOTAL_AMOUNT DECIMAL(9,2) NOT NULL,
    PRIMARY KEY (ORDER_TIME, DELIVERY_ZIP_CODE, DELIVERY_ADDRESS)
);

-- Create ORDER_INFO table
CREATE TABLE ORDER_INFO (
    ORDER_ID INT NOT NULL AUTO_INCREMENT,
    ORDER_USER_ID INT NOT NULL,
    ORDER_EMPLOYEE_ID INT,
    ORDER_TIME DATETIME NOT NULL,
    DELIVERY_ADDRESS VARCHAR(100) NOT NULL,
    DELIVERY_ZIP_CODE VARCHAR(10),
    LAST_FOUR_DIGITS VARCHAR(10),
    PRIMARY KEY (ORDER_ID),
    FOREIGN KEY (ORDER_USER_ID) REFERENCES CUSTOMER(USER_ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ORDER_EMPLOYEE_ID) REFERENCES EMPLOYEE_INFO(EMPLOYEE_ID)
        ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (ORDER_TIME, DELIVERY_ZIP_CODE, DELIVERY_ADDRESS) REFERENCES ORDER_STATUS_INFO(ORDER_TIME, DELIVERY_ZIP_CODE, DELIVERY_ADDRESS)
        ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create INCLUDES table
CREATE TABLE INCLUDES (
    INCLUDES_ORDER_ID INT NOT NULL,
    INCLUDES_PRODUCT_ID INT NOT NULL,
    QUANTITY INT NOT NULL,
    PRIMARY KEY (INCLUDES_ORDER_ID, INCLUDES_PRODUCT_ID),
    FOREIGN KEY (INCLUDES_ORDER_ID) REFERENCES ORDER_INFO(ORDER_ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (INCLUDES_PRODUCT_ID) REFERENCES PRODUCT_INFO(PRODUCT_ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);
